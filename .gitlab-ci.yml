variables:
  AWS_REGION: eu-west-2
  DOCKER_REGISTRY: 600197618921.dkr.ecr.eu-west-2.amazonaws.com/ecobank
  PROJECT_NAME: training-project
  IMAGE_NAME: devsecops-training-${CI_PIPELINE_IID}
  RUNNER_GENERATE_ARTIFACTS_METADATA: "true"
  DAST_BAS_DISABLED: "true"
  CI_DEBUG_TRACE: "false"

stages:
  - build_docker_image
  - scan
  - deploy_uat

# Build and push Docker image
build_docker_push:
  image: docker:stable
  stage: build_docker_image
  services:
    - docker:dind
  before_script:
    - pwd
    - ls
    - apk add --no-cache python3 py3-pip
    - pip3 install --no-cache-dir awscli
    - aws --version
    - docker --version
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_UAT
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_UAT
    - echo "Image name is $IMAGE_NAME"
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker build -t $DOCKER_REGISTRY:$IMAGE_NAME -f Dockerfile .
    - docker images
    - echo "Pushing new image for $DOCKER_REGISTRY:$IMAGE_NAME ..."
    - docker push $DOCKER_REGISTRY:$IMAGE_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - "**/*"

# Security scan with Trivy
scan_image:
  stage: scan
  image: docker:stable
  services:
    - name: docker:dind
      command: ["--tls=false", "--host=tcp://0.0.0.0:2375"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache curl python3 py3-pip jq
    - pip3 install awscli
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_UAT
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_UAT
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
  script:
    - REPORT_FILE="trivy-report.json"
    - docker pull $DOCKER_REGISTRY:$IMAGE_NAME
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --scanners vuln --no-progress --severity CRITICAL,HIGH --format json $DOCKER_REGISTRY:$IMAGE_NAME > $REPORT_FILE
    - |
      vulnerabilities=$(jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Severity == "CRITICAL" or .Severity == "HIGH") | [.VulnerabilityID, .Severity, .PkgName, .InstalledVersion, .Description] | @tsv' $REPORT_FILE)
      if [ -n "$vulnerabilities" ]; then
        echo "$vulnerabilities"
        exit 1
      else
        echo "No HIGH or CRITICAL vulnerabilities found."
      fi
  artifacts:
    paths:
      - trivy-report.json
    expire_in: 30 days
  needs:
    - build_docker_push
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - "**/*"

# Deploy to UAT environment
deploy_uat:
  stage: deploy_uat
  image: alpine:3.8
  before_script:
    - apk add --no-cache git curl bash coreutils
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
    - mv kustomize /usr/local/bin/
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git remote set-url origin https://oauth2:$$$$@gitlab.com/${CI_PROJECT_PATH}.git
  script:
    - cd deployment-artefacts/
    - ls
    - ls overlays/uat
    - kustomize build overlays/uat/ > overlays/uat/deployment-final.yaml || { echo "Kustomize build failed!"; exit 1; }
    - |
      cat > overlays/uat/set-image.yaml << EOF
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: training-project-deployment
      spec:
        template:
          spec:
            containers:
              - name: training-project-deployment
                image: $DOCKER_REGISTRY:devsecops-training-${CI_PIPELINE_IID}
      EOF
    - ls -la overlays/uat/
    - git checkout dev
    - git pull origin dev
    - git add overlays/uat/set-image.yaml overlays/uat/deployment-final.yaml
    - git commit -m "Update training-project deployment image to $DOCKER_REGISTRY:devsecops-training-${CI_PIPELINE_IID} [skip ci]"
    - git push
  artifacts:
    paths:
      - deployment-artefacts/overlays/uat/deployment-final.yaml
    expire_in: 1 day
  needs:
    - build_docker_push
    - scan_image
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      changes:
        - "**/*"



















